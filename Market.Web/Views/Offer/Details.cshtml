@using System.Globalization
@model Market.Web.ViewModels.DetailsOfferViewModel

@{
    ViewBag.Title = "Details";
}

<link rel="stylesheet" href="/resources/demos/style.css">
<div class="container">
    <div class="main-block">
        <div class="row">
            <div class="col-md-8">
                <div class="offer-full-block" style="height: 300px">
                    <div class="seller-details">
                        <img class="img-circle" src="@Url.Action("Photo", "Profile", new { UserId = Model.UserProfile.Id })" alt="Alternate Text" style="width:80px; height:80px" />


                        <ul class="ul-seller-info">
                            <li>
                                @Html.ActionLink(Model.UserProfile.ApplicationUser.UserName, "Info", "Profile", new { prof = Model.UserProfile.ApplicationUser.UserName }, null)
                            </li>
                            <li>
                                Рейтинг <span style="font-weight:700">@Model.UserProfile.Rating</span>
                            </li>
                            <li>
                                <input id="contact" type="button" value="Связаться" class="btn btn-info" />

                            </li>
                            <li>
                                @if (Model.UserProfile.IsOnline)
                                {
                                    <span class="badge badge-pill badge-light">Online</span>
                                }
                                else
                                {
                                    <span class="badge badge-pill badge-dark">Offline</span>
                                }
                            </li>
                        </ul>


                        <table style="margin:auto; width: 100px">
                            <tr>
                                <td align="center">
                                    <div class="feedback-score-pos">
                                        <i class="info-rate-line icon-smile-pos-green icon-info-rate"></i>
                                    </div>
                                </td>

                                <td align="center">
                                    <div class="feedback-score-neg">
                                        <i class="info-rate-line icon-smile-pos-green icon-info-rate"></i>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Model.UserProfile.Positive
                                </td>
                                <td>
                                    @Model.UserProfile.Negative
                                </td>
                            </tr>
                        </table>
                    </div>





                    <div class="offer-details">
                        <ul class="ul-details">
                            <li class="li-details">
                                <label class="label-details">Игра</label>
                                @Html.DisplayFor(m => m.Game.Name)
                            </li>
                            <li class="li-details">
                                <label class="label-details">Просмотры</label>
                                <span>@Model.Views</span>
                            </li>
                            <li class="li-details">
                                <label class="label-details">Дата создания</label>
                                <span>@Model.DateCreated.Value.ToShortDateString()</span>

                            </li>
                        </ul>
                        <div class="col-sm-12">

                            <div class="row offer-details-rank">
                                @foreach (var filter in Model.Filters)
                                {
                                    <div class="col-md-6">
                                        <span>@filter.Text</span>
                                    </div>
                                }
                                @foreach (var item in Model.FilterItems)
                                {
                                    var url = "../../Content/Images/" + Model.Game.Value + "/Ranks/" + item.Image;
                                    <div class="col-md-6">

                                        <img src="@url" style="width:100px" alt="Alternate Text" />
                                    </div>
                                }
                            </div>

                        </div>



                    </div>



                </div>



            </div>




            <div class="col-md-4">
                <div class="offer-description-block" style="height: 300px">
                    <div style="text-align:center">
                        <h3>@Html.DisplayFor(m => m.Price)</h3>
                    </div>
                    <div style="text-align:center">
                        @Html.ActionLink("Купить", "Pay", "Checkout", new { offerId = Model.Id, sellerId = Model.UserProfile.Id },null );
                        @using (Html.BeginForm("Pay", "Checkout"))
                        {
                            @Html.HiddenFor(m => m.Id)
                            <input type="submit" name="buy" value="Купить" class=" btn btn-success" />
                        }

                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-12 offer-description">

                <div class="offer-description-block" style="height: 300px">
                    <div class="block-label">@Model.Header</div>
                    <div class="block-body">
                        <span>@Model.Discription</span>
                    </div>



                </div>




            </div>
        </div>
    </div>

    <div class="row" id="feedback-list">

        @*@Html.Partial("_FeedbackList",Model.UserProfile.Feedbacks)*@
        @Html.Action("FeedbackList", "Feedback", new { page = 1, receiverId = Model.UserProfile.Id, filter = "all" })

    </div>
    @using (Html.BeginForm("Give", "Feedback", new { }, FormMethod.Get, null))
    {
        <input type="hidden" name="senderId" value="@Model.UserProfile.Id" />
        <input type="hidden" name="id" value="@Model.Id" />
        <input class="btn btn-success" type="submit" value="Оставить отзыв" />
    }

    @*@if (ViewBag.CurrentProfileOffers != null && ((ICollection<Offer>)ViewData["Offers"]).Contains(Model.))
        {*@
    @Html.ActionLink("Редактировать", "Edit", "Offer", new { id = Model.Id }, null)
    @*}*@
</div>



<div id="modal-dialog" class="modal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Написать сообщение</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span id="close" aria-hidden="true">×</span>
                </button>
            </div>
            @using (Html.BeginForm("New", "Message", FormMethod.Post, new { }))
            {
                <input type="hidden" name="ReceiverId" value="@Model.UserProfile.Id" />
                @Html.Hidden("Subject", Model.Id)
                @Html.AntiForgeryToken()
                <div class="modal-body">

                    <div class="form-group">
                        <img class="img-circle avatar-small" src="@Url.Action("Photo", "Profile" , new { UserId = Model.UserProfile.Id })" style="float:left; margin-right: 20px" alt="Alternate Text" />
                        <div>

                            @Html.ActionLink(Model.UserProfile.ApplicationUser.UserName, "Info", new { })

                            <p>
                                @if (Model.UserProfile.IsOnline)
                                {
                                    <span class="badge badge-pill badge-light">Online</span>
                                }
                                else
                                {
                                    <span class="badge badge-pill badge-dark">Offline</span>
                                }
                            </p>


                        </div>
                    </div>
                    <div class="form-group">
                        @Html.TextBox("OfferHeader", Model.Header + " " + "(" + Model.Id + ")", new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        <textarea name="MessageBody" class="form-control" rows="5"></textarea>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-info">Отправить</button>
                </div>

            }

        </div>
    </div>
</div>
<input type="hidden" id="page" value="1" />
<input type="hidden" id="filter" value="all" />
<input type="hidden" id="receiver-id" value="@Model.UserProfile.Id" />


@section scripts
{
    <script type="text/javascript" src="~/Scripts/jquery-modal.js"></script>
    <script>
        function SelectPage(page) {

            $('#page').val(page);
            SearchFeedbacks();
        }
        function SearchFeedbacks() {
            var message = {
                "page": $('#page').val(),
                "filter": $('#filter').val(),
                "receiverId": $('#receiver-id').val()
            };
            $.ajax({
                url: '/Feedback/FeedbackList',
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(message),
                dataType: "html",
                beforeSend: function () {
                    $('#loader').show();

                },
                success: function (response) {

                    $('#feedback-list').html(response);
                    $('#loader').hide();

                    //SelectFilterItem(g, false);
                },
                error: function () {
                    alert("fff");
                }
            });
        }
    </script>
}