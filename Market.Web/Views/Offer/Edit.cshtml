@using System.Globalization
@model Market.Web.ViewModels.EditOfferViewModel
@{
    ViewBag.Title = "Редактировать объявление";
}


<div class="row">

    <div class="col-lg-12" style="align-items: center; display: flex; justify-content: center">
        <div class="col-lg-8">
            <div class="create-offer-form">
                <h3 class="text-center text-gray text-700 mb-4">Редактировать объявление</h3>
                @using (Html.BeginForm("Edit", "Offer", FormMethod.Post, new { id = "editForm", enctype = "multipart/form-data" }))
                {
                    @Html.HiddenFor(m => m.Id)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Games, new { @class = "col-form-label  col-form-label-md" })
                        @Html.DropDownListFor(m => m.Game, Model.Games, new { @class = "custom-select", id = "game", onchange = "SelectFilterItemInCreate(value)" })
                    </div>
                    <div id="filter-item">
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.SteamLogin, new { @class = "col-form-label  col-form-label-md" })

                        @Html.TextBoxFor(m => m.SteamLogin, "", new { @class = "form-control", @for = "textBox", @readonly = "readonly" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Header, new { @class = "col-form-label  col-form-label-md" })

                        @Html.TextBoxFor(m => m.Header, new { @class = "form-control" })

                        @Html.ValidationMessageFor(m => m.Header)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Discription, new { @class = "col-form-label  col-form-label-md" })
                        @Html.TextAreaFor(m => m.Discription, 10, 0, new { @class = "form-control", style = "resize: none" })

                        @Html.ValidationMessageFor(m => m.Discription)
                    </div>
                    <div class="form-group">
                        @Html.Label("Скриншоты", new { @class = "col-form-label  col-form-label-md" })
                        <div class="row">
                            @{
                                var counter = 1;
                                foreach (var image in Model.ScreenshotPathes)
                                {

                                    var inputId = $"image-input{counter}";
                                    var imgId = $"blah{counter}";
                                    <div class="col-md-4">
                                        <div class="screenshot-place">
                                            <label class="mb-0" for="@inputId" style="padding: 10px 5px; width: 100%; height: 100%">
                                                @if (image.Value != null)
                                                {
                                                    <img style="width: 100%; height: 100%" id="@imgId" src="@image.Value" alt="your image" />
                                                }
                                                else
                                                {
                                                    <img style="width: 100%; height: 100%" id="@imgId" src="~/Content/Images/add-image.png" alt="your image" />
                                                }

                                            </label>

                                            <a href='javascript:;' style="width: 100px; height: 100px; display:none">


                                                <input id="@inputId" data-slot="@counter" value="@image.Value" type="file" style="display:none" accept="image/*" name="Images" onchange='readURL(this)'>
                                            </a>

                                        </div>
                                    </div>
                                    counter++;
                                }
                            }

                        </div>

                    </div>
                    <div class="form-group">
                        <div class="col-md-5" style="padding: 0px; margin-right: 40px">
                            @Html.LabelFor(m => m.Price, new { @class = "col-form-label  col-form-label-md" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">₽</span>
                                </div>
                                @Html.TextBoxFor(m => m.Price, "", new { @class = "form-control", onchange = "CalculatePrice()", id = "ListingPrice", autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.Price)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-5" style="padding: 0px">
                            @Html.Label("Стоимость безопасной сделки", new { @class = "col-form-label  col-form-label-md" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">₽</span>
                                </div>
                                <input class="form-control" readonly="" id="guaranteePrice" type="text" name="guaranteePrice" onchange="CalculatePrice()" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-5" style="padding: 0px">
                            @Html.Label("Вы получите", new { @class = "col-form-label  col-form-label-md" })
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">₽</span>
                                </div>
                                <input class="form-control" readonly="" id="EstimatedPayout" type="text" name="EstPayout" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="custom-control custom-checkbox mr-sm-2">
                            @Html.CheckBox("SellerPaysMiddleman", Model.SellerPaysMiddleman, new { @class = "custom-control-input", @id = "sellerPay", @checked = "checked" })
                            <label class="custom-control-label" for="sellerPay">Оплатить безопасную сделку вместо покупателя</label>
                        </div>
                    </div>
                    <div class="confirm-buton">
                        <div class="form-group text-right">
                            <input class="btn btn-submit" type="submit" name="create" value="Изменить" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>




@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/Filters.js">


    </script>

    @Scripts.Render("~/bundles/jquery-create-offer")
    <script>
        $(document).ready(function () {
            CalculatePrice();
        });
    </script>

    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    var numbers = input.dataset.slot;
                    $('#blah' + numbers).attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
}
